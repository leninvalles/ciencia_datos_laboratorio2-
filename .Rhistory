library(readr)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv",
col_names = FALSE)
View(epa_http)
View(epa_http)
View(epa_http)
# Pregunta 2: Valor medio de la columna Bytes
colnames(epa_http) <- c("IP", "Tiempo", "Tipo", "URL", "Protocolo", "Codigo", "Bytes")
epa_http$Bytes <- as.numeric(epa_http$Bytes)
mean(epa_http$Bytes, na.rm = TRUE)
View(epa_http)
install.packages("dplyr")
install.packages("stringr")
install.packages("tidyr")
install.packages("statsr")
library(dplyr)
library(stringr)
library(tidyr)
View(epa_http)
group_by(Protocolo)
epa_http <- read_table("epa-http/epa-http.csv", col_names = FALSE)
#Pregunta 6: Cantidad de peticiones que NO tienen como protocolo HTTP/0.2
epa_http <- read_table("ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
library(readr)
epa_http <- read_table("ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
View(epa_http)
View(epa_http)
#Pregunta 6: Cantidad de peticiones que NO tienen como protocolo HTTP/0.2
epa_http <- read_table("ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
epa_http <- read_table("D:\Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
epa_http <- read_table("D:\Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
epa_http <- read_table("Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
epa_http <- read_table("epa-http/epa-http.csv", col_names = FALSE)
View(epa_http)
View(epa_http)
View(epa_http)
rm (epa_http)
library(readr)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv",
col_names = FALSE)
View(epa_http)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
View(epa_http)
dim(epa_http)
colnames(epa_http) <- c("IP", "Tiempo", "Tipo", "URL", "Protocolo", "Codigo", "Bytes")
epa_http$Bytes <- as.numeric(epa_http$Bytes)
mean(epa_http$Bytes, na.rm = TRUE)
View(epa_http)
group_by(Protocolo)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
save.image("D:\\Drive(LeninValles)\\2. Basicos Capacitaciones\\21. Maestria en Ciberseguridad\\1. Cursos\\12. Ciencia de Datos\\Trabajos\\.RData")
q()
Pregunta2 <- NROW(filter(epa_http,grepl("edu",IP)==TRUE))
View(epa_http)
Pregunta2 <- NROW(filter(epa_http,grepl("edu",IP)==TRUE))
library(readr)
epa_http <- read_table("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa-http.csv", col_names = FALSE)
View(epa_http)
colnames(epa_http) <- c("IP", "Tiempo", "Tipo", "URL", "Protocolo", "Codigo", "Bytes")
Pregunta2 <- NROW(filter(epa_http,grepl("edu",IP)==TRUE))
Pregunta2 <- NROW(filter(epa_http,grepl("edu",X1)==TRUE))
Pregunta2 <- NROW(filter(epa_http,grepl("edu",IP)==TRUE))
Pregunta2 <- NROW(filter(epa_http,grepl("edu",IP)==TRUE))
filter(epa_http,grepl("edu","IP")==TRUE)
#De las peticiones recibidas utilizaremos nrow que es la cantidad de registros (Filas)
#El filter nos permite realizar el filtfo según una condició, buscando las coincidencias de patrones con grepl
FiltroGet <- nrow(filter(epa_http,grepl("edu","IP")==TRUE))
#De las peticiones recibidas utilizaremos nrow que es la cantidad de registros (Filas)
#El filter nos permite realizar el filtfo según una condició, buscando las coincidencias de patrones con grepl
FiltroGet <- nrow(filter(epa_http,grepl("edu", IP)))
Pregunta2 <- nrow(filter(epa_http,grepl("edu",IP)==TRUE))
View(epa_http)
Pregunta2 <- nrow(filter(epa_http, grepl("edu", IP)==TRUE))
library(tidyr)
library(dplyr)
Pregunta2 <- nrow(filter(epa_http, grepl("edu", IP)==TRUE))
View(epa_http)
View(epa_http)
View(epa_http)
rm(FiltroGet)
FiltroGet <- nrow(filter(epa_http, grepl("edu", IP)==TRUE))
View(epa_http)
View(epa_http)
rm (Pregunta2)
#De las peticiones recibidas utilizaremos nrow que es la cantidad de registros (Filas)
#El filter nos permite realizar el filtfo según una condició, buscando las coincidencias de patrones con grepl
FiltroGet <- nrow(filter(epa_http, grepl("edu", IP)==TRUE))
View(epa_http)
View(epa_http)
save.image("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa_http_h.RData")
View(epa_http)
library(dbplyr)
detach("package:dbplyr", unload = TRUE)
library(dplyr)
library(stringr)
library(readr)
library(tidyr)
View(epa_http)
View(epa_http)
epa_http.protocolof <- filter(epa_http,substr(epa_http$Protocolo,1,8)!="HTTP/0.2")
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
rm(epa_http)
rm(epa_http.protocolof)
rm (FiltroGet)
rm (Pregunta6)
load("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab1/epa-http/epa_http_h.RData")
View(epa_http)
View(epa_http)
epa_http.protocolof <- filter(epa_http,substr(epa_http$Protocolo,1,8)!="HTTP/0.2")
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
#Filtramos todas las consultas HTTP/0.2
epa_http.protocolof <- filter(epa_http,substr(epa_http$Protocolo,1,8)!="HTTP/0.2")
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
View(epa_http)
View(epa_http.protocolof)
View(epa_http.protocolof)
View(epa_http.protocolof)
View(Pregunta6)
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
library(statsr)
View(Pregunta6)
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
#Filtramos todas las consultas HTTP/0.2
epa_http.protocolof <- filter(epa_http,substr(epa_http$Protocolo,1,8)!="HTTP/0.2")
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
View(epa_http.protocolof)
Pregunta6<- nrow(epa_http.protocolof$Protocolo)
View(Pregunta6)
View(epa_http.protocolof)
Pregunta6<- NROW(epa_http.protocolof$Protocolo)
View(epa_http.protocolof)
View(Pregunta6)
rm (epa_http)
rm (FiltroGet)
html_boric <- read_html("https://prensa.presidencia.cl/discurso.aspx?id=188237")
install.packages("httr")
install.packages("XML")
html_boric <- read_html("https://prensa.presidencia.cl/discurso.aspx?id=188237")
## 1. Guardar el código html en un objeto
html_boric <- read_html("https://prensa.presidencia.cl/discurso.aspx?id=188237")
install.packages("rvest")
install.packages("stringr")
install.packages("reader")
library(rvest)
library(stringr)
library(readr)
html_boric <- read_html("https://prensa.presidencia.cl/discurso.aspx?id=188237")
discurso_boric <- html_boric |>
html_element("#main_ltContenido") |>
html_text2() |>
str_replace_all("\n\n", "\n")
write_lines(discurso_boric, "discursos/cl_2022_boric_asuncion-cargo.txt")
setwd("D:/Drive(LeninValles)/2. Basicos Capacitaciones/21. Maestria en Ciberseguridad/1. Cursos/12. Ciencia de Datos/Trabajos/ciencia_datos_lab2")
## 3. Guardar el archivo dentro de la carpeta "discursos"
write_lines(discurso_boric, "discursos/cl_2022_boric_asuncion-cargo.txt")
